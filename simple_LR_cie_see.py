import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split

data=pd.read_csv("C:/Users/SPTINT-14/Desktop/dataset/CIE_SEE dataset (1).csv")
print(data)
x=data['cie'].values.reshape(-1,1)
print(x)
y=data['see'].values.reshape(-1,1)
print(y)
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=(0.2),random_state=4)
print(x_train)
print(x_test)
print(y_train)
print(y_test)


from sklearn.linear_model import LinearRegression

lm=LinearRegression()
lm.fit(x_train,y_train)
ypredict=lm.predict(x_test)
print(ypredict)

output

 cie  see
0   218  374
1   121  216
2   211  363
3   117  292
4   195  255
..  ...  ...
78  267  420
79  240  382
80  169  322
81  203  290
82  244  378

[83 rows x 2 columns]
[[218]
 [121]
 [211]
 [117]
 [195]
 [134]
 [145]
 [179]
 [173]
 [166]
 [144]
 [173]
 [142]
 [150]
 [114]
 [187]
 [171]
 [130]
 [195]
 [190]
 [191]
 [125]
 [225]
 [193]
 [193]
 [165]
 [126]
 [189]
 [205]
 [205]
 [175]
 [188]
 [188]
 [199]
 [157]
 [156]
 [228]
 [169]
 [230]
 [198]
 [115]
 [174]
 [176]
 [284]
 [135]
 [270]
 [220]
 [172]
 [153]
 [175]
 [230]
 [230]
 [201]
 [245]
 [175]
 [200]
 [208]
 [162]
 [161]
 [233]
 [212]
 [167]
 [261]
 [261]
 [260]
 [180]
 [285]
 [250]
 [219]
 [123]
 [248]
 [229]
 [246]
 [249]
 [201]
 [195]
 [192]
 [221]
 [267]
 [240]
 [169]
 [203]
 [244]]
[[374]
 [216]
 [363]
 [292]
 [255]
 [259]
 [269]
 [323]
 [313]
 [311]
 [267]
 [311]
 [268]
 [281]
 [229]
 [330]
 [308]
 [243]
 [349]
 [338]
 [339]
 [251]
 [382]
 [338]
 [338]
 [308]
 [243]
 [326]
 [350]
 [350]
 [320]
 [322]
 [338]
 [342]
 [288]
 [289]
 [384]
 [294]
 [286]
 [342]
 [232]
 [316]
 [310]
 [432]
 [182]
 [416]
 [308]
 [231]
 [205]
 [228]
 [340]
 [341]
 [286]
 [353]
 [251]
 [304]
 [300]
 [233]
 [161]
 [347]
 [309]
 [260]
 [470]
 [490]
 [411]
 [309]
 [445]
 [389]
 [347]
 [178]
 [393]
 [343]
 [375]
 [377]
 [324]
 [289]
 [444]
 [349]
 [420]
 [382]
 [322]
 [290]
 [378]]
[[174]
 [171]
 [126]
 [156]
 [189]
 [144]
 [150]
 [179]
 [145]
 [195]
 [193]
 [195]
 [173]
 [172]
 [225]
 [175]
 [248]
 [142]
 [167]
 [165]
 [233]
 [130]
 [188]
 [157]
 [187]
 [285]
 [205]
 [250]
 [199]
 [270]
 [176]
 [115]
 [188]
 [193]
 [267]
 [175]
 [173]
 [175]
 [245]
 [244]
 [211]
 [208]
 [212]
 [219]
 [192]
 [261]
 [125]
 [249]
 [218]
 [117]
 [201]
 [230]
 [135]
 [221]
 [228]
 [162]
 [201]
 [203]
 [161]
 [166]
 [230]
 [246]
 [121]
 [123]
 [200]
 [220]]
[[240]
 [261]
 [190]
 [229]
 [180]
 [198]
 [230]
 [153]
 [284]
 [134]
 [191]
 [260]
 [169]
 [114]
 [169]
 [205]
 [195]]
[[316]
 [308]
 [243]
 [289]
 [326]
 [267]
 [281]
 [323]
 [269]
 [349]
 [338]
 [289]
 [311]
 [231]
 [382]
 [251]
 [393]
 [268]
 [260]
 [308]
 [347]
 [243]
 [322]
 [288]
 [330]
 [445]
 [350]
 [389]
 [342]
 [416]
 [310]
 [232]
 [338]
 [338]
 [420]
 [228]
 [313]
 [320]
 [353]
 [378]
 [363]
 [300]
 [309]
 [347]
 [444]
 [490]
 [251]
 [377]
 [374]
 [292]
 [286]
 [286]
 [182]
 [349]
 [384]
 [233]
 [324]
 [290]
 [161]
 [311]
 [340]
 [375]
 [216]
 [178]
 [304]
 [308]]
[[382]
 [470]
 [338]
 [343]
 [309]
 [342]
 [341]
 [205]
 [432]
 [259]
 [339]
 [411]
 [322]
 [229]
 [294]
 [350]
 [255]]
[[376.68719891]
 [403.1452235 ]
 [313.69190227]
 [362.82823365]
 [301.09284294]
 [323.77114973]
 [364.08813958]
 [267.07538276]
 [432.12305995]
 [243.13717004]
 [314.9518082 ]
 [401.88531757]
 [287.23387768]
 [217.93905138]
 [287.23387768]
 [332.59049126]
 [319.99143194]]
